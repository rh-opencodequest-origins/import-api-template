apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: import-api-catalog
  title: Import Existing API
  description: Import existing API, autocreating a catalog-info.yaml and optionally performing TechDocs setup.
  tags:
    - import
    - catalog
    - register
    - api
spec:
  owner: group:default/platformengineers
  system: rhdh
  type: template

  parameters:

    - title: Information about your existing API
      required:
        - gitlabHost
        - gitlabOrganization
        - repositoryName
        - apiType
        - apiPathText
      properties:
        gitlabHost:
          title: GitLab Hostname
          type: string
          description: Your GitLab instance hostname
          default: {{ gitlab_host }}
          enum:
            - {{ gitlab_host }}
        gitlabOrganization:
          title: GitLab Organization that contains the API Spec
          type: string
          default: parasol
        repositoryName:
          title: Repository Containing the API Spec
          type: string
          description: Please ensure this repo exists
          default: parasol-store-api
        apiPathText:
          title: API Specification URL
          description: This must be the the full URL where the API specification is stored in the repository
          type: string
        apiType:
          title: Type of API
          type: string
          default: openapi
          description: Typically OpenAPI Spec, but others are supported
          enum:
          - openapi
          - grpc
          - graphql
          - tRPC 
          - Avro
          - Dataset
          - Other
          allowArbitraryValues: true

    - title: New API Details
      required:
        - allLocationGitlabOrganization
        - allLocationRepositoryName
        - system
        - componentOwner
        - lifecycle

      properties:
        allLocationGitlabOrganization:
          title: GitLab Organization
          type: string
          default: parasol
          desciption: The GitLab Organization that contains the repository where the API Entity will be created and stored
        allLocationRepositoryName:
          title: GitLab Repository Entity Name
          type: string
          description: The repository where the API Entity will be created and stored (ensure this repo exists)
          default: all-location-parasol
        componentName:
          title: Name of the API Entity
          type: string
          description: Name of the API (defaults to the name of the repository that contains the API spec)
          default: parasol-store-api
        system:
          title: System Name
          description: This is the System Entity that the API is part of
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: System
        componentOwner:
          title: Owner of the API
          description: Select an owner from the list or enter a reference to a Group or a User
          type: string
          default: user:default/dev1
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        description:
          title: Short Description of this API
          description: Enter a short description of this API
          type: string
          default: Open API specification for the parasol-store application
        lifecycle:
          title: Lifecycle
          type: string
          description: 'The lifecycle state of the component. Well-known and common values: experimental, production, deprecated.'
          default: experimental
          enum:
          - experimental
          - production
          - deprecated
          - other

  steps:
    - id: fetch-all-location-repo
      name: Fetch all-locations catalog repo
      action: fetch:template
      targetPath: ../.
      input:
        url: {{ 'https://${{ parameters.gitlabHost }}/${{ parameters.gitlabOrganization }}/${{ parameters.allLocationRepositoryName }}' }}
        

    # Step1: Create catalog-info file for the component
    - id: catalogTemplate
      name: Fetch catalog-info template
      action: fetch:template
      input:
        url: ./templates
        targetPath: ./patch
        values:
          applicationType: "API"
          component_id: {{ '${{ parameters.componentName }}' }}
          componentName: {{ '${{ parameters.componentName }}' }}
          componentLifecycle: {{ '${{ parameters.componentLifecycle }}' }}
          description: {{ '${{ parameters.description }}' }}
          destination: {{ '"${{ parameters.gitlabHost }}/${{ parameters.gitlabOrganization }}/${{ parameters.repositoryName }}"' }}
          host: {{ '${{ parameters.gitlabHost }}' }}
          owner: {{ '${{ parameters.componentOwner }}' }}
          orgName: {{ '${{ parameters.gitlabOrganization }}' }}
          repoName: {{ '${{ parameters.repositoryName }}' }}
          system: {{ '${{ parameters.system }}' }}
          apiType: {{ '${{ parameters.apiType }}' }}
          apiPathText: {{ '${{ parameters.apiPathText }}' }}
          allLocationGitlabOrganization: {{ '${{ parameters.allLocationGitlabOrganization }}' }}
          allLocationRepositoryName: {{ '${{ parameters.allLocationRepositoryName }}' }}
    
    # Merge catalog-info and techdocs into EXISTING repo   - only EXISTING REPO
    - id: publishComponentMergeRequest
      name: Open PR with for all-catalog
      action: publish:gitlab:merge-request
      input: 
        repoUrl: {{ '"${{ parameters.gitlabHost }}?repo=${{ parameters.allLocationRepositoryName }}&owner=${{ parameters.gitlabOrganization }}"' }}
        title: Open PR with catalog-info.yaml
        description: Open PR with catalog-info.yaml
        branchName: {{ '"${{ parameters.componentName }}-create"' }}
        sourcePath: ./patch
        targetPath: {{ '"./${{ parameters.repositoryName }}"' }}
        commitAction: create
        removeSourceBranch: true    
  output:
    links:
      - url: {{ '${{ steps.publishComponentMergeRequest.output.mergeRequestUrl }}' }}
        title: 'Component Merge Request'
